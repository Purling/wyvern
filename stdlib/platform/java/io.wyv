module def io(java:Java)
import java:wyvern.stdlib.support.IO.io

import bytebuffer
val bytebuffer = bytebuffer(java)
type ByteBuffer = bytebuffer.ByteBuffer

// === Library Types ===
type InputStream
    def close():Unit

type OutputStream
    def close():Unit

type DataInputStream
    def readUTF():String
    def readLine(): String
    def close():Unit
// add for both binary reader and reader
type DataOutputStream
    def writeUTF(str:String):Unit
    def writeBytes(str:String):Unit
    def close():Unit

type Socket
    def getOutputStream():OutputStream
    def getInputStream():InputStream
    def close():Unit

type ServerSocket
    def accept():Socket

type DatagramChannel
    def send(p:Packet):Int
    def receive(buf:ByteBuffer):Packet
    def close():Unit

resource type Packet
    val data : ByteBuffer
    val address : Unit // java SocketAddress

// === Creator Functions ===
def makeServerSocket(port:Int):ServerSocket
    io.makeServerSocket(port)

def makeSocket(hostname:String, port:Int):Socket
    io.makeSocket(hostname, port)

def makeSocketAddress(hostname : String, port : Int) : Unit
    io.makeSocketAddress(hostname, port)

def makeDatagramChannel(port:Int):DatagramChannel
    val chan = io.makeDatagramChannel(port)
    new
        def send(p:Packet):Int
            io.sendDatagram(chan, p.data.buffer, p.address)
        def receive(buf:ByteBuffer):Packet = new
            val data = buf
            val address = io.receiveDatagram(chan, buf.buffer)
        def close():Unit
            io.closeChannel(chan)

def makePacket(data:ByteBuffer, hostname:String, port:Int):Packet = new
    val data = data
    val address = io.makeSocketAddress(hostname, port)

/**
* TODO: Hide functions that take arg:Dyn from the user
*/

def getDataOutputStream(out:Dyn):DataOutputStream // This will be the hidden function
    io.getDataOutputStream(out)

def makeDataOutputStream(out:OutputStream):DataOutputStream
    getDataOutputStream(out)

def getDataInputStream(in:Dyn):DataInputStream // This will be the hidden function
    io.getDataInputStream(in)

def makeDataInputStream(in:InputStream):DataInputStream
    getDataInputStream(in)
