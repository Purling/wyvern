(function(){"use strict";Number.prototype._PLUS_ = function(x) { return this + x; };Number.prototype._HYPHEN_ = function(x) { return this - x; };Number.prototype._TIMES_ = function(x) { return this * x; };Number.prototype._DIVIDE_ = function(x) { return this / x; };Number.prototype._MOD_ = function(x) { return this % x; };Number.prototype._LESSTHAN_ = function(x) { return this < x; };Number.prototype._GREATERTHAN_ = function(x) { return this > x; };Number.prototype._EQUAL__EQUAL_ = function(x) { return this == x; };Number.prototype.negate = function() { return -this; };Number.prototype.floor = function() { return Math.floor(this); };Boolean.prototype.ifTrue = function(t, f) { return this ? t.apply() : f.apply(); };Boolean.prototype._AMPERSAND__AMPERSAND_ = function(x) { return this && x; };Boolean.prototype._VERTICALBAR__VERTICALBAR_ = function(x) { return this || x; };Boolean.prototype._NOT_ = function() { return !this; };String.prototype._LESSTHAN_ = function(x) { return this < x; };String.prototype._GREATERTHAN_ = function(x) { return this > x; };String.prototype._EQUAL__EQUAL_ = function(x) { return this == x; };String.prototype._PLUS_ = function(x) { return this + x; };String.prototype._length = function(x) { return this.length; };String.prototype.equals = function(x) { return this === x; };Array.prototype.get = function(x) { return this[x]; };let __temp_0;{;{ let _ = 0;;{ let _ = 0;;{ let __temp_2 = function() {
let _this = this; _this.temp = 0;};__temp_2.prototype.f= function(x) { let _this = this;let __temp_1;{;{ let y = x._PLUS_(1);; __temp_1 = _this.f(y);}}return __temp_1;}
let __temp_3 = new __temp_2();let x = __temp_3;; __temp_0 = x.f(0);}}}}let MOD_M_toplevel = __temp_0;})();