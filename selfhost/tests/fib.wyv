type Int:
    def +(i:Int):Int
    def -(i:Int):Int

type Fib:
    val a1:Int
    val a2:Int
    def next(u:Unit):Fib

type X:
    def makeCounter(x:Int,y:Int):Fib

val x = new self:X:
    def makeCounter(x:Int,y:Int):Fib:
        new this:Fib:    
            val a1 = x
            val a2 = y
            def next(u:Unit):Fib:
                self.makeCounter(y,x+y)

val c = x.makeCounter(1,1)
val d = c.next(())
val e = d.next(())
val f = e.next(())
f.next(()).a2
