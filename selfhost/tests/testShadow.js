(function(){"use strict";Number.prototype._PLUS_ = function(x) { return this + x; };Number.prototype._HYPHEN_ = function(x) { return this - x; };Number.prototype._TIMES_ = function(x) { return this * x; };Number.prototype._DIVIDE_ = function(x) { return this / x; };Number.prototype._MOD_ = function(x) { return this % x; };Number.prototype._LESSTHAN_ = function(x) { return this < x; };Number.prototype._GREATERTHAN_ = function(x) { return this > x; };Number.prototype._EQUAL__EQUAL_ = function(x) { return this == x; };Number.prototype.negate = function() { return -this; };Number.prototype.floor = function() { return Math.floor(this); };Boolean.prototype.ifTrue = function(t, f) { return this ? t.apply() : f.apply(); };Boolean.prototype._AMPERSAND__AMPERSAND_ = function(x) { return this && x; };Boolean.prototype._VERTICALBAR__VERTICALBAR_ = function(x) { return this || x; };Boolean.prototype._NOT_ = function() { return !this; };String.prototype._LESSTHAN_ = function(x) { return this < x; };String.prototype._GREATERTHAN_ = function(x) { return this > x; };String.prototype._EQUAL__EQUAL_ = function(x) { return this == x; };String.prototype._PLUS_ = function(x) { return this + x; };String.prototype._length = function(x) { return this.length; };String.prototype.equals = function(x) { return this === x; };Array.prototype.get = function(x) { return this[x]; };let __temp_0;{;{ let _ = 0;;{ let _ = 0;;{ let __temp_1 = function() {
let _this = this; _this.a = 5;};let __temp_2 = new __temp_1();let x = __temp_2;;{ let _ = 0;;{ let __temp_4 = function() {
let _this = this; _this.temp = 0;};__temp_4.prototype.f= function(b) { let _this = this;let __temp_3;{; __temp_3 = (x).a._PLUS_(b);}return __temp_3;}
let __temp_5 = new __temp_4();let fn = __temp_5;;{ let _ = 0;;{ let __temp_6 = function() {
let _this = this; _this.b = 3;};let __temp_7 = new __temp_6();let y = __temp_7;;{ let __temp_8 = function() {
let _this = this; _this.b = 2;};let __temp_9 = new __temp_8();let x = __temp_9;; __temp_0 = (x).b._PLUS_((y).b)._PLUS_(fn.f(1));}}}}}}}}}let MOD_M_toplevel = __temp_0; console.log(MOD_M_toplevel);})();
